generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model posts {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  postInfo   String?
  imagelink  String?
  like       Json?     @db.Json
  bookmark   Json?     @db.Json
  user_id    String?   @db.Uuid
  profiles   profiles? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id            String    @id @db.Uuid
  updated_at    DateTime? @db.Timestamptz(6)
  username      String?   @unique
  full_name     String?
  avatar_url    String?
  website       String?
  description   String?
  likedposts    String[]  @db.Uuid
  bookmarkPosts String[]  @db.Uuid
  posts         posts[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users_info {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  name        String
  username    String   @unique
  email       String
  profile     String
  Followers   BigInt[] @default([])
  Following   BigInt[] @default([])
  description String?
}
